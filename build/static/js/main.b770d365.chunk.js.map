{"version":3,"sources":["Api.js","cafeContext.js","Cafe.js","NavBar.js","Home.js","FoodMenu.js","FoodItem.js","FormPage.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["SnackOrBoozeApi","axios","get","result","data","cafeContext","React","createContext","Cafe","children","useState","isLoading","setIsLoading","snacks","setSnacks","drinks","setDrinks","useEffect","a","getSnacks","getDrinks","Provider","value","collectFormData","type","name","description","recipe","serve","id","NavBar","expand","exact","to","className","navbar","Home","style","color","scope","length","FoodMenu","map","snack","key","drink","FoodItem","snacksItems","drinksItems","cantFind","useParams","find","FormPage","history","useHistory","formData","seFormData","handleChange","e","target","onSubmit","preventDefault","push","for","onChange","placeholder","Routes","useContext","path","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b770d365.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst BASE_API_URL = \"http://localhost:5000\";\n\n/* \n  json-server will give you CRUD endpoints on snacks and drinks.\n  Here we've provided you with a single action to get all drinks.\n\n  You'll need to add to this class as you build features for the app.\n*/\n\nclass SnackOrBoozeApi {\n\n  static async getSnacks() {\n    const result = await axios.get(`${BASE_API_URL}/snacks`);\n    return result.data;\n  }\n\n  static async getDrinks() {\n    const result = await axios.get(`${BASE_API_URL}/drinks`);\n    return result.data;\n  }\n\n}\n\nexport default SnackOrBoozeApi;\n","import React from \"react\";\r\n\r\nconst cafeContext = React.createContext();\r\n\r\nexport default cafeContext;","import React, { useState, useEffect } from \"react\";\r\n// import { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport SnackOrBoozeApi from \"./Api\";\r\nimport cafeContext from \"./cafeContext\";\r\n\r\n//I have created a seperate component with name Cafe to store all the snacks state and\r\n// drinks states.\r\n\r\n\r\nfunction Cafe({children}) {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [snacks, setSnacks] = useState([]);\r\n  const [drinks, setDrinks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function getSnacks() {\r\n      let snacks = await SnackOrBoozeApi.getSnacks();\r\n      setSnacks(snacks);\r\n      setIsLoading(false);\r\n    }\r\n    getSnacks();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function getDrinks() {\r\n      let drinks = await SnackOrBoozeApi.getDrinks();\r\n      setDrinks(drinks);\r\n      setIsLoading(false);\r\n    }\r\n    getDrinks();\r\n  }, []);\r\n\r\n  //This function will collect data from Form and add that data into snacks state or drinks state depends\r\n  // upon the type/\r\n  const collectFormData = ({type, name, description, recipe, serve})=>{\r\n    type === \"Snacks\" ? setSnacks(data => ([...data, {id : name, name, description, recipe, serve}])) :\r\n      setDrinks(data => ([...data, {id : name, name, description, recipe, serve}]))\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <p>Loading &hellip;</p>;\r\n  }\r\n\r\n  // I have create a context with name cafeContext get pass some values of drinks, snacks and\r\n  // collectData function to Route component where I have put all the routes with thier \r\n  // respective components.\r\n  return(\r\n    <cafeContext.Provider value={{drinks, snacks, collectFormData}}>\r\n\r\n    {children}\r\n\r\n  </cafeContext.Provider>\r\n  )\r\n}\r\n\r\nexport default Cafe;","import React from \"react\";\nimport \"./NavBar.css\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar, Nav, NavItem } from \"reactstrap\";\n\nfunction NavBar() {\n  return (\n    <div>\n      <Navbar expand=\"md\">\n        <Link exact to=\"/\" className=\"navbar-brand\">\n          Snack or Booze\n        </Link>\n\n        <Nav className=\"ml-auto\" navbar>\n          <NavItem>\n            <Link exact to=\"/snacks\">Snacks</Link>\n          </NavItem>\n          <NavItem>\n          <Link exact to=\"/drinks\">Drinks</Link>\n          </NavItem>\n          <NavItem>\n          <Link exact to=\"/add-new\">Add New</Link>\n          </NavItem>\n        </Nav>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport { Card, CardBody, CardTitle, Table } from \"reactstrap\";\n\nfunction Home({snacks, drinks}) {\n  return (\n    <section className=\"col-md-8\">\n      <Card>\n        <CardBody className=\"text-center\">\n          <CardTitle>\n            <div>\n            <h3 className=\"font-weight-bold\">\n              Welcome to Silicon Valley's premier dive cafe!\n            </h3>\n            </div>\n            <Table>\n      <thead style = {{color : \"white\"}}>\n        <tr>\n          <th>Type</th>\n          <th>Snacks</th>\n          <th>Drinks</th>\n        </tr>\n      </thead>\n      <tbody style = {{color : \"white\"}}>\n        <tr>\n          <th scope=\"row\">Numbers</th>\n          <td>{(()=> snacks.length)()}</td>\n          <td>{(()=> drinks.length)()}</td>\n        </tr>\n      </tbody>\n    </Table>\n          </CardTitle>\n        </CardBody>\n      </Card>\n    </section>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./FoodMenu.css\";\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  CardText,\n  ListGroup,\n  ListGroupItem\n} from \"reactstrap\";\n\nfunction FoodMenu({ snacks, drinks }) {\n  return (\n    <section className=\"col-md-4\">\n      <Card>\n        <CardBody>\n          <CardTitle className=\"font-weight-bold text-center\">\n            Food Menu\n          </CardTitle>\n          <CardText>\n            Some quick example text to build on the card title and make up the\n            bulk of the card's content.\n          </CardText>\n          {snacks ? <ListGroup>\n            {snacks.map(snack => (\n              <Link to={`/snacks/${snack.id}`} key={snack.id}>\n                <ListGroupItem>{snack.name}</ListGroupItem>\n              </Link>\n            ))}\n          </ListGroup> : <ListGroup>\n            {drinks.map(drink => (\n              <Link to={`/drinks/${drink.id}`} key={drink.id}>\n                <ListGroupItem>{drink.name}</ListGroupItem>\n              </Link>\n            ))}\n          </ListGroup>}\n          \n\n          \n        </CardBody>\n      </Card>\n    </section>\n  );\n}\n\nexport default FoodMenu;\n","import React from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport { Card, CardBody, CardTitle, CardText } from \"reactstrap\";\n\nfunction FoodItem({ snacksItems, drinksItems, cantFind }) {\n  const { id } = useParams();\n  \n  let snack, drink;\n  if (snacksItems){\n    snack = snacksItems.find(snack => snack.id === id);\n  }else{\n    drink = drinksItems.find(drink => drink.id === id);\n  \n  if (!snack) return <Redirect to={cantFind} />;\n  \n\n  if (!drink) return <Redirect to={cantFind} />;\n  }\n  \n\n  return (\n    <section>\n      <Card>\n      {snack ? <CardBody>\n        <CardTitle className=\"font-weight-bold text-center\">\n            {snack.name}\n          </CardTitle>\n          <CardText className=\"font-italic\">{snack.description}</CardText>\n          <p>\n            <b>Recipe:</b> {snack.recipe}\n          </p>\n          <p>\n            <b>Serve:</b> {snack.serve}\n          </p>\n        </CardBody> : <CardBody>\n        <CardTitle className=\"font-weight-bold text-center\">\n            {drink.name}\n          </CardTitle>\n          <CardText className=\"font-italic\">{drink.description}</CardText>\n          <p>\n            <b>Recipe:</b> {drink.recipe}\n          </p>\n          <p>\n            <b>Serve:</b> {drink.serve}\n          </p>\n        </CardBody>}\n        \n      </Card>\n    </section>\n  );\n}\n\nexport default FoodItem;\n","import React, {useState} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nconst FormPage = ({collectFormData})=>{\r\n    const INITIAL_STATE = {type: \"\",name : \"\", description : \"\",\r\n                            recipe: \"\", serve : \"\"}\r\n    const history = useHistory();\r\n    \r\n    const [formData, seFormData] = useState(INITIAL_STATE);\r\n\r\n    const handleChange = (e) =>{\r\n        const {name, value} = e.target;\r\n        seFormData(data => ({...data, \r\n        [name] : value}))\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        collectFormData({...formData});\r\n        history.push(\"/\");\r\n\r\n    }\r\n\r\n    return(\r\n        <Form onSubmit={handleSubmit}>\r\n            \r\n        <FormGroup>\r\n        <Label for=\"exampleSelect\">Select</Label>\r\n        <Input type=\"select\" name=\"type\" id=\"exampleSelect\"\r\n        value={formData.type} onChange={handleChange}>\r\n          <option>None</option>\r\n          <option>Snacks</option>\r\n          <option>Drinks</option>\r\n        </Input>\r\n      </FormGroup>\r\n\r\n      <FormGroup>\r\n        <Label for=\"typeName\">Name</Label>\r\n        <Input type=\"text\" name=\"name\" id=\"typeName\" \r\n        value = {formData.name} onChange={handleChange}\r\n        placeholder=\"Name\" />\r\n      </FormGroup>\r\n\r\n      <FormGroup>\r\n        <Label for=\"typeDescription\">Description</Label>\r\n        <Input type=\"text\" name=\"description\" id=\"typeDescription\" \r\n        value = {formData.description} onChange={handleChange}\r\n        placeholder=\"Description\" />\r\n      </FormGroup>\r\n\r\n      <FormGroup>\r\n        <Label for=\"recipe\">Recipe</Label>\r\n        <Input type=\"text\" name=\"recipe\" \r\n        value={formData.recipe} onChange={handleChange}\r\n        id=\"recipe\" placeholder=\"Recipe\" />\r\n      </FormGroup>\r\n\r\n      <FormGroup>\r\n        <Label for=\"serve\">Serve</Label>\r\n        <Input type=\"textarea\" name=\"serve\" \r\n        value={formData.serve} onChange = {handleChange}\r\n        id=\"serve\" />\r\n      </FormGroup>\r\n      <Button>Submit</Button>\r\n    </Form>\r\n    )\r\n}\r\n\r\n\r\nexport default FormPage;","import React, {useContext} from \"react\";\r\nimport cafeContext from \"./cafeContext\";\r\nimport Home from \"./Home\";\r\nimport Menu from \"./FoodMenu\";\r\nimport Snack from \"./FoodItem\";\r\nimport FormPage from \"./FormPage\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\n\r\n// This component contains all the Route and thier respective\r\n// components.\r\nconst Routes = ()=>{\r\n    const {drinks, snacks, collectFormData} = useContext(cafeContext);\r\n    return(\r\n        <main>\r\n        <Switch>\r\n        \r\n        <Route exact path=\"/\"><Home snacks={snacks} drinks={drinks}/></Route>\r\n        <Route exact path=\"/snacks\"><Menu snacks={snacks} drinks={drinks}/></Route>\r\n        <Route exact path=\"/snacks/:id\"><Snack snacksItems={snacks} cantFind=\"/snacks\" /></Route>\r\n        <Route exact path=\"/drinks\"><Menu drinks={drinks} /></Route>\r\n        <Route exact path=\"/drinks/:id\"><Snack drinksItems={drinks} cantFind=\"/drinks\" /></Route>\r\n        <Route exact path = \"/add-new\"><FormPage collectFormData={collectFormData}/></Route>\r\n\r\n        <Route><h1>Page Not Found</h1></Route>\r\n\r\n      </Switch>\r\n      </main>\r\n    )\r\n}\r\n\r\nexport default Routes;","import React from \"react\";\nimport Cafe from \"./Cafe\";\nimport NavBar from \"./NavBar\";\nimport Routes from \"./Routes\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Cafe>\n      <NavBar />\n      <Routes />\n        </Cafe>\n    </div>\n  )}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}